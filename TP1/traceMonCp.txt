   /**************************************************************************/
  /*                  Trace des exercices                                   */
 /* par Remi Bourgeon   DUT INFO ASPE      TP1     le 10/O3/2017           */
/**************************************************************************/

/* TD1 exercice 1 "monEcho" */

/* Trace pour ./monEcho hello, world, how are you doing? */
/* stderr vide */

hello, world, how are you doing?

/* Trace pour ./monEcho */
/* stdout vide */
/* stderr : */

Pas assez d'arguments: Success

--- 

/* TD1 exercice 2 "hello" et "monCat" */
/* Redirection de stdout pour le code avec aucune erreur */
/* instruction write écrite normalement  : "write(1, "hello, world\n", strlen("hello, world\n"));" */

hello, world

/* stderr vide */


/* Redirection de stderr pour le code avec erreur */
/* instruction write mal écrite : "write(5, "hello, world\n", strlen("hello, world\n"));" */

Probleme d'ecriture: Bad file descriptor

/* stdout vide */

/* Trace pour ./monCat */
/* Test avec une chaine de caractère trop plus importante que la capacité du buffer limitée à 80 caractères pour correspondre à la taille d'une ligne de console classique */

/* stdout : */
Entrez une chaine de char :
// La chaine ne peut excèder 80 caractères comme prévu par le programme
Chaine lue :	pozjefpzjeizejfpozejfpozejfpozejfpozejfpojzepfjzepofjpozejfpozejfpzejfpojzeopfjz

/* stderr : */
Erreur de lecture dans stdin : Success


---

/* TD1 exercice 3 "monCp" et "monCp1" */
/* Trace sans erreur pour time + monCp */

Fichier non existant
Creation ...

real	0m0.022s
user	0m0.004s
sys	0m0.016s

/* Trace sans erreur pour time + monCp1*/

Fichier non existant
Creation ...

real	0m22.542s
user	0m0.176s
sys	0m22.188s

/* Commentaire */
/* En diminuant la taille du tableau de caractère par un facteur 10000, on multiplie aussi le nombre d'interruption et d'appels systèmes par un facteur 10000. Il est donc logique que le programme monCp1 soit bien moins efficace que le programme monCp */

/* Trace d'execution avec erreurs :*/
/* Quand on passe plus de deux arguments */
Trop d'arguments: Success

/*Quand on passe 0 ou un argument*/
Pas assez d'arguments: Success

